---
- name: Persistent volume 'clair-postgres' in '{{ namespace }}'
  include: persistent-volume.yaml
  vars:
    name: clair-postgres

- name: Postgres 'clair-postgres' in '{{ namespace }}'
  include: postgres.yaml
  vars:
    name: clair-postgres
    user: clair
    password: clair
    database: clair

- name: Check for 'clair-jwt:v2.0.8' image
  shell:
    cmd: oc get images -n quay-enterprise -o jsonpath='{.items[*].dockerImageReference}' | grep clair-jwt
  ignore_errors: yes
  register: result
- name: Import image 'clair-jwt:rhel7'
  when: result is failure
  command: oc import-image clair-jwt:rhel7 --from=quay.io/thomasmckay/clair-jwt:rhel7 -n quay-enterprise --confirm

- name: Check for Secret 'clair-config-secret'
  command: oc get secrets -n quay-enterprise -o jsonpath='{.items[?(.metadata.name=="clair-config-secret")].metadata.name}'
  register: result
- name: Create clair.yaml for Secret 'clair-config-secret'
  shell:
    cmd: |
      cat <<EOF > tmp/clair.yaml
      clair:
        database:
          type: pgsql
          options:
            source: postgresql://clair:clair@clair-postgres.quay-enterprise.svc/clair?sslmode=disable
            cachesize: 16384
        api:
          healthport: 6061
          port: 6062
          timeout: 900s
          paginationkey: "XxoPtCUzrUv4JV5dS+yQ+MdW7yLEJnRMwigVY/bpgtQ="
        updater:
          interval: 6h
          enabledupdaters:
          - rhel
          - alpine
          notifier:
            attempts: 3
            renotifyinterval: 1h
            http:
              endpoint: http://quay-registry.quay-enterprise.svc/secscan/notify
              proxy: http://localhost:6063
      jwtproxy:
        signer_proxy:
          enabled: true
          listen_addr: :6063
          ca_key_file: /certificates/mitm.key
          ca_crt_file: /certificates/mitm.crt
          signer:
            issuer: security_scanner
            expiration_time: 5m
            max_skew: 1m
            nonce_length: 32
            private_key:
              type: preshared
              options:
                key_id: e93e8d55fcf0efb22368c09e710d751eb66d7d52395e798fef83978acc52f0c2
                #private_key_path: /config/security_scanner.pem
                private_key_path: /etc/clair/security_scanner.pem
        verifier_proxies:
        - enabled: true
          listen_addr: :6060
          # section below for more information.
          # key_file: /config/clair.key
          # crt_file: /config/clair.crt
          verifier:
            audience: http://clair.quay-enterprise.svc:6060
            upstream: http://localhost:6062
            key_server:
              type: keyregistry
              options:
                registry: http://quay-registry.quay-enterprise.svc/keys/
      EOF
- name: Create secret 'clair-config-secret'
  when: result.stdout != "clair-config-secret"
  shell:
    cmd: |
      oc create secret generic clair-config-secret \
         --from-file=config.yaml=tmp/clair.yaml -n quay-enterprise
- name: Update secret 'clair-config-secret'
  when: result.stdout == "clair-config-secret"
  shell:
    cmd: |
      oc create secret generic clair-config-secret \
         --from-file=config.yaml=tmp/clair.yaml -n quay-enterprise \
         --dry-run -o yaml | oc replace -f -


- name: Check for Deployment 'clair'
  command: oc get deployments -n quay-enterprise -o jsonpath='{.items[?(.metadata.name=="clair")].metadata.name}'
  register: result
- name: Create or update Deployment 'clair'
  shell:
    cmd: |
      cat <<EOF | oc apply -n quay-enterprise -f -
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        namespace: quay-enterprise
        name: clair
        labels:
          quay-enterprise-component: clair
      spec:
        replicas: 1
        selector:
          matchLabels:
            quay-enterprise-component: clair
        template:
          metadata:
            namespace: quay-enterprise
            labels:
              quay-enterprise-component: clair
          spec:
            volumes:
              - name: configvolume
                projected:
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: clair-config-secret
                      path: config.yaml
              - name: certsvolume
                projected:
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: clair-cert-secret
            containers:
            - name: quay-enterprise
              image: quay.io/thomasmckay/clair-jwt:rhel7
              #image: quay.io/coreos/clair-jwt:v2.0.8
              imagePullPolicy: Always
              env:
                - name: REDEPLOY
                  value: "1"
              ports:
              - containerPort: 6060
                protocol: TCP
              - containerPort: 6061
                protocol: TCP
              volumeMounts:
              - name: configvolume
                readOnly: false
                mountPath: /clair/config
              - name: certsvolume
                readOnly: false
                mountPath: /clair/certs
            imagePullSecrets:
              - name: quay-pull-secret
      EOF
