# To setup quay locally
#
# ansible-playbook --private-key=~/.minishift/machines/minishift/id_rsa --u docker -i `minishift ip`, playbooks/quay-local.yaml
#
# ansible-playbook -i "localhost," -e quay_host=thomasmckay.usersys.redhat.com -e quay_ip=192.168.1.4 -e quay_image=quay.io/thomasmckay/quay:devel playbooks/quay-local.yaml --tags teardown
#
- hosts: localhost
  vars:
    quay_host: thomasmckay.usersys.redhat.com
    quay_ip: 192.168.1.40
    quay_image: quay.io/redhat/quay:v3.1.0
    clair_image: quay.io/redhat/clair-jwt:v3.1.0
    builder_image: quay.io/redhat/quay-builder:v3.1.0
    roles_dir: ../roles
    volumes_dir: /home/thomasmckay/quay-volumes
    downloads_dir: /home/thomasmckay/Downloads
    quay_http_port: 8080
    quay_https_port: 8443

  tasks:
    - name: Stop docker processes
      tags: [teardown]
      ignore_errors: true
      shell:
        cmd: |
          docker kill quay-01

    - name: Remove prior data and volume folders
      tags: [teardown]
      command: "sudo rm -Rf {{ volumes_dir }}/{{ item }}"
      args:
        removes: "{{ volumes_dir }}/{{ item }}"
      with_items:
        - quay-haproxy

    - name: Create volume folders
      tags: [haproxy]
      file:
        path: "{{ volumes_dir }}/{{ item }}"
        state: directory
      with_items:
        - quay-haproxy

    - name: Quay Registry container
      tags: [haproxy]
      docker_container:
        name: quay-{{ item }}
        image:  "{{ quay_image }}"
        volumes:
          - "{{ volumes_dir }}/quay-config:/conf/stack"
          - "{{ volumes_dir }}/quay-storage:/datastorage"
          - "/home/thomasmckay/code/quay-devel:/home/thomasmckay/code/quay-devel"
        env:
          QUAYENTRY: registry
          DEBUGLOG: "true"
        ports:
          - "998{{ item }}:8080"
          - "999{{ item }}:8443"
          - "997{{ item }}:7443"
        etc_hosts:
          thomasmckay.usersys.redhat.com: 192.168.1.40
          thomasmckay-desktop.usersys.redhat.com: 192.168.1.2
          thomasmckay-nyc.usersys.redhat.com: 192.168.1.50
        network_mode: host
        keep_volumes: true
        auto_remove: true
        state: started
        restart: true
      register: result
      until: result is succeeded
      retries: 5
      delay: 10
      with_items:
        - 1
